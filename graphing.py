# -*- coding: utf-8 -*-
import pylab
import numpy as np
import math
import random
import scipy.stats as sp
import matplotlib.cm as cm
import matplotlib.pyplot as plt

#Q1a
plt.clf() #Clear the current figure (prevents multiple labels)

labelfont = {
        'family' : 'sans-serif',  # (cursive, fantasy, monospace, serif)
        'color'  : 'black',       # html hex or colour name
        'weight' : 'normal',      # (normal, bold, bolder, lighter)
        'size'   : 14,            # default value:12
        }

titlefont = {
        'family' : 'serif',
        'color'  : 'black',
        'weight' : 'bold',
        'size'   : 16,
        }

forwardValues = [-0.0,
-0.0,
0.0,
-0.0,
0.1,
0.0,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
0.1,
0.1,
0.1,
0.1,
0.1,
0.1,
0.1,
0.1,
0.1,
0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.0,
-0.0,
-0.0,
-0.0,
-0.0,
-0.0,
0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
0.0,
0.0,
0.0,
0.0,
0.1,
0.0,
-0.1,
-0.1,
-0.1,
-0.1,
-0.1,
-0.0,
0.0,
0.0,
0.0,
0.0,
0.1,
-0.1,
-0.1,
-0.1]
forwardValues2 = [
-0.1,
-0.0,
-0.1,
-0.1,
-0.1,
-0.1,
1.8,
9.1,
9.1,
9.1,
9.2,
9.3,
0.3,
-0.1,
-0.1,
-0.1,
9.2,
9.2,
9.2,
9.2,
9.2,
-0.0,
-0.1,
-0.1,
1.7,
8.9,
9.0,
9.0,
9.0,
9.0,
0.7,
-0.1,
-0.1,
5.3,
9.1,
9.1,
9.1,
9.2,
0.0,
-0.0,
2.0,
9.0,
9.0,
9.0,
9.1,
0.1,
-0.1,
-0.1,
4.2,
9.1,
9.1,
9.1,
9.1]
backwardValues = [-0.0,
0.0,
-0.0,
0.0,
0.8,
8.8,
9.4,
9.4,
9.4,
9.4,
9.4,
9.4,
9.4,
0.1,
0.0,
0.1,
0.1,
0.1,
0.1,
0.1,
0.1,
0.1,
3.3,
9.5,
9.5,
9.5,
9.5,
9.5,
9.5,
9.5,
9.5,
9.5,
2.4,
0.0,
0.0,
0.0,
0.0,
0.1,
0.1,
2.1,
9.5,
9.5,
9.4,
9.5,
9.4,
9.5,
9.4,
0.0,
0.0,
0.0,
0.0,
0.9,
6.3,
9.5,
9.4,
9.5,
9.4,
9.4,
2.0,
0.0,
0.0,
0.0,
0.0,
3.6,
9.3,
9.3,
9.3]
backwardValues2 = [
-0.0,
-0.0,
-0.0,
0.0,
-0.0,
-0.0,
0.1,
0.4,
0.4,
0.4,
0.4,
0.4,
0.0,
0.0,
0.0,
-0.0,
0.5,
0.4,
0.4,
0.4,
0.4,
-0.0,
0.0,
-0.0,
0.0,
0.3,
0.4,
0.4,
0.4,
0.4,
0.1,
-0.0,
-0.0,
0.1,
0.4,
0.4,
0.4,
0.4,
0.0,
-0.0,
0.0,
0.3,
0.4,
0.4,
0.4,
-0.0,
-0.0,
-0.0,
0.0,
0.4,
0.4,
0.4,
0.4]

totalWeight = []


x1 = []
x2 = []
for i in range(0, len(forwardValues)):
    x1.append(i)
    totalWeight.append(forwardValues[i] + backwardValues[i])
for i in range(0, len(forwardValues2)):
    x2.append(i)

print(len(x1))
print(len(forwardValues))
print(len(backwardValues))
#Transmission Powers
#plt.plot(np.array(x1), np.array(forwardValues),                             
#         'green',                       # colour
#         linestyle='--',                    # line style
#         linewidth=3,                       # line width
#         label='Forward Weight')      # plot label
#
#plt.plot(np.array(x1), np.array(backwardValues),                             
#         'red',                       # colour
#         linestyle='--',                    # line style
#         linewidth=3,                       # line width
#         label='Backward Weight')      # plot label
         
#plt.plot(np.array(x1), np.array(totalWeight),                             
#         'blue',                       # colour
#         linestyle='solid',                    # line style
#         linewidth=3,                       # line width
#         label='Total Weight')      # plot label
        

#axes = plt.gca()
#axes.set_xlim([0, 67])            # x-axis bounds
#axes.set_ylim([0, 12])            # x-axis bounds
#legend = plt.legend(loc='upper right', shadow=True, fontsize='small')
#
#plt.title('Weight Drift', fontdict=titlefont) 
#plt.xlabel('time', fontdict=labelfont)
#plt.ylabel('lbs', fontdict=labelfont)
#
#plt.show()

forwardValues = [-0.01,
0,
0,
-0.01,
0.01,
0.01,
-0.02,
0.19,
7.86,
9.61,
16.26,
29.39,
35.01,
76.41,
46.91,
65.56,
62.99,
61.15,
68.28,
81.39,
60.44,
71.35,
84.36,
68.74,
52.49,
75.22,
84.91,
74.56,
74.48,
63.84,
64.94,
74.29,
76.28,
79.89,
77.46,
74.19,
75.19,
59.11,
67.24,
69.32,
74.91,
75.28,
67.71,
39.92,
34.54,
44.56,
81.47,
79.28,
38.82,
28.37,
36.7,
40.47,
40.14,
37.49,
34.07,
30.18,
32.09,
34.01,
34.03,
30.71,
34.06,
34.36,
21.25,
52.06,
81.4,
79.05,
75.37,
82.08,
75.91,
67.58,
73.64,
114.98,
120.36,
108,
113.71,
112.7,
128.15,
122.82,
129.92,
119.74,
70.32,
64.51,
79.05,
78.77,
74.22,
78.14,
79.39,
80.11,
84.79,
51.73,
24.9,
35.9,
40.99,
40.32,
41.3,
35.49,
64.14,
97.75,
78.15,
72.51,
76.02,
83.04,
117.13,
117.92,
110.74,
111.88,
112.14,
125.44,
87.42,
72.59,
77.85,
84.26,
84.51,
87.78,
72.34,
35.09,
41.67,
50.4,
44.75,
49.44,
48.97,
48.43,
48.39,
48.23,
45.54,
44.75,
68.82,
80.83,
71.06,
72.87,
73.83,
73.46,
74,
72.61,
100.06,
110.12,
100.61,
105.28,
113.91,
112.54,
110.84,
115.31,
100.19,
113.28,
121.8,
102.84,
84.5,
77.52,
80.82,
82.74,
81.42,
80.05,
83.67,
19.4]
backwardValues = [0.16,
0.16,
0.16,
0.15,
0.16,
0.15,
0.16,
0.16,
0.16,
1.28,
0.91,
1.77,
2.32,
2.62,
0.92,
122.31,
83.48,
77.87,
76.42,
54.52,
98.3,
46.28,
27.78,
50.24,
80.5,
109.49,
78.84,
76.49,
73.93,
71.93,
79.17,
75.8,
75.43,
73.72,
76.55,
77.3,
76.34,
71.31,
88.51,
89.54,
82.51,
73.88,
69.52,
78.22,
115.39,
110.68,
108.61,
78.05,
78.14,
113.81,
128.14,
120.18,
117,
115.47,
114.05,
117.53,
118.52,
121.17,
119.97,
119.08,
121.74,
118.62,
120.08,
134.12,
104.17,
70.49,
71.68,
81.01,
67.76,
68.04,
78.73,
71.75,
34.66,
32.98,
45.34,
42.78,
42.13,
29.13,
29.97,
30.07,
29.66,
65.69,
84.32,
72.07,
69.27,
70.01,
67.21,
66.01,
65.16,
59.77,
89.8,
130.97,
112.16,
108.48,
108.54,
111.59,
120.52,
83.87,
55.47,
79.78,
89.09,
81.93,
74.62,
44.61,
34.43,
42.28,
43.53,
44.11,
34.56,
64.21,
83.51,
76.65,
70.22,
68.26,
64.82,
67.45,
127.66,
114.7,
103.38,
106.31,
102.67,
103.04,
104.58,
102.77,
102.19,
103.61,
109.3,
80.33,
67.47,
75.2,
78.21,
78.76,
75.47,
76.78,
81.24,
56.22,
38.9,
48.25,
48.14,
43.7,
46.61,
46.81,
41.35,
58.02,
45.13,
40.31,
46.78,
73.2,
81.09,
77.99,
71.86,
72.21,
74.92,
73.44]
totalWeight = []
x_values = []
frontFraction = []
backFraction = []
for i in range(0, len(forwardValues)):
    totalWeight.append(forwardValues[i] + backwardValues[i])
    frontFraction.append(forwardValues[i]/totalWeight[i])
    backFraction.append(backwardValues[i]/totalWeight[i])
    x_values.append(i)
print(len(backwardValues))
print(len(forwardValues))
print(len(x_values))

plt.plot(np.array(x_values), np.array(frontFraction),                             
         'green',                       # colour
         linestyle='--',                    # line style
         linewidth=3,                       # line width
         label='Forward Weight')      # plot label

plt.plot(np.array(x_values), np.array(backFraction),                             
         'red',                       # colour
         linestyle='--',                    # line style
         linewidth=3,                       # line width
         label='Backward Weight')      # plot label

#plt.plot(np.array(x_values), np.array(totalWeight),                             
#         'blue',                       # colour
#         linestyle='solid',                    # line style
#         linewidth=3,                       # line width
#         label='Total Weight')      # plot label

axes = plt.gca()
axes.set_xlim([0, len(backwardValues)])            # x-axis bounds
axes.set_ylim([0, 1.2])            # x-axis bounds
legend = plt.legend(loc='upper right', shadow=True, fontsize='small')

plt.title('Weight Distribution While Riding', fontdict=titlefont) 
plt.xlabel('time', fontdict=labelfont)
plt.ylabel('lbs', fontdict=labelfont)

plt.show()




